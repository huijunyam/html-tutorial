HTML
html element => <a>, <p>, <h1> define structure of the content
html tag => <a></a> content of that element
html attribute => provide additional information about an element such as id, class, href in <a> tags

<!DOCTYPE html => inform web browser which version of html we are using
The content in <head> will not be shown in the page
The content in <body> will be shown

Self closing elements => only have one tag and do not have closing tag
example: <br>, <img>, <meta>, <wbr>, <embed>, <input>, <param>, <hr>, <link>, <source>

Semantics
is the practice of giving content on the page meaning and structure by using the proper element
Semantic code describe the value of content on a page, regardless of the style or appearance of that content

<div> and <span> have no semantic values, they act as containers solely for styling purpose
<div> block level element, <span> inline level element used to identify smaller grouping of text within block level element

Block vs inline elements
block element begin on new line, occupying any available width
inline element do not begin new line, lining up one after another, and only
maintain width of their content.

Bold text with strong or b
<strong></strong> used to give strong importance tot ext, and is thus most popular option to bold text
<b> element means to stylistically offset the text, which is not always the best choice.

Italicize text with emphasize
to italicize text, we used <em> inline level element, the other option is <i> element

Building structure in html 5
header, nav, article, section, aside, footer

header element => identify the top of a page, article, section or other segment of a page
it is in the body tag, it outline the heading of a segment of a page.

nav => identified a section of major navigational links on a page. It should be reserved for primary navigation sections only

article => used to identify a section of independent, self contained content maybe independent distributed or reused.

section => used to identify a thematic grouping of content

aside => hold content such as sidebars, inserts, or brief explanation, that is related to the content surrounding it

footer => identifies the closing or end of a page, section, or other segment of a page
it usually found at the bottom of its parent

list of character encoding can be found in http://www.copypastecharacter.com/

Links
relative path => link pointing to other page of the same website which does not include the domain (.com, .org, .edu)
the link pointing to another page on the same website, the href attribute value needs to include only the filename of the page

absolute path => link to other website outside of the current one, where the href must include full domain

email link => href need to start with mailto:followed by email address
ex: href="mailto:shay@awesome.com"
additionally, subject, body, and other information can be populated for the email
to add subject line, we will include subject= parameter after the email address
to add body line, we will include body= parameter
binding one parameter with another, need to separate with &
after the email address, need to add ? to bind the hyperlink path, spacing need to be encoded with %20
ex: <a href="mailto:shay@awesome.com?subject=Reaching%20Out&body=How%20are%20you">Email Me</a>

open link in new window
used target attr with a value of _blank
target attr determine exactly where the link to be display, and the _blank value specifies a new window
<a href="http://shayhowe.com/" target="_blank">Shay Howe</a>

linking to parts of the same page
we can create an on page link by first setting an id attribute on the element where we wish to link to
then use the id in the href
ex: <a href="#top">Back to top</a>

CSS
linking CSS, we used rel attribute with a value of stylesheet to specify their relationship between html and css
href attr used to identify the location or path of the CSS file

selectors => which elements within our html to target and apply styles to
selector generally target an attribute value such as id and class or element

property => once the element is selected, a property determine the styles will be applied to that element
it is written inside the {} and followed by semicolon
such as background, background-color, font-size, height, width

values => determine what style we like to apply for the property

type selector => target element by their element type
such as <div>, <p>

class selector => allow us to select an element based on the element's class attribute value
defined by a leading period .awesome {}

id selector => more precise than class selector, target one unique element
It can only be used once per page.
denoted by # followed by id attribute value

CSS reset
to ensure cross browser compatibility because google chrome will has its own set
of default styling that is different from internet explorer or safari
the reset generally removed any sizing, margin, padding or additional styling
Css reset need to be placed at the top of the css file
one of the most popular reset by Eric Meyer's reset http://meyerweb.com/eric/tools/css/reset/
or normalize.css created by Nicolas Gallagher
